name: Deploy Edge Security Infrastructure

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint-and-scan:
    name: Lint, Validate & Snyk Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Lint Python code
      run: |
        pip install flake8
        flake8 lambda/

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Format Check
      run: terraform fmt -check -recursive
      working-directory: terraform/

    - name: Terraform Init
      run: terraform init
      working-directory: terraform/

    - name: Terraform Validate
      run: terraform validate
      working-directory: terraform/

    - name: Snyk Scan - Terraform
      uses: snyk/actions/iac@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: test --file=terraform/main.tf

    - name: Snyk Scan - Python
      uses: snyk/actions/python@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: test
        project: lambda/

  deploy:
    name: Manual Approval + Deploy
    needs: lint-and-scan
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://your-site.com

    steps:
    - name: Wait for approval
      uses: trstringer/manual-approval@v1
      with:
        secret: ${{ secrets.GITHUB_TOKEN }}
        approvers: your-github-username
        instructions: "Approve to deploy Terraform WAF & CloudFront infrastructure."

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      run: terraform init
      working-directory: terraform/

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
